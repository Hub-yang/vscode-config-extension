{
  "window.openFoldersInNewWindow": "on",
  "window.commandCenter": false,
  "security.workspace.trust.untrustedFiles": "open",
  // #region 视图
  "workbench.editor.empty.hint": "hidden",
  "workbench.editor.tabActionLocation": "right",
  "workbench.iconTheme": "catppuccin-latte",
  "workbench.productIconTheme": "icons-carbon",
  "workbench.colorTheme": "GitHub Dark High Contrast",
  "workbench.list.smoothScrolling": true,
  "workbench.sideBar.location": "right",
  "workbench.startupEditor": "newUntitledFile",
  "workbench.tree.expandMode": "singleClick",
  "workbench.tree.indent": 15,
  "window.nativeTabs": true,
  "window.titleBarStyle": "custom",
  "editor.mouseWheelZoom": true,
  "editor.accessibilitySupport": "off",
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.cursorBlinking": "phase",
  "editor.find.addExtraSpaceOnTop": false, //*
  "editor.guides.bracketPairs": "active",
  "editor.inlineSuggest.enabled": true,
  "editor.fontFamily": "courier, Fira Code, monospace",
  "editor.multiCursorModifier": "ctrlCmd",
  "editor.suggestSelection": "first",
  "editor.renderWhitespace": "boundary",
  "editor.fontLigatures": "'ss01', 'ss02', 'ss03', 'ss06', 'zero'", //*
  "editor.fontSize": 16,
  "editor.detectIndentation": false, // 手动设置tabsize
  "editor.tabSize": 2,
  "editor.unicodeHighlight.invisibleCharacters": false,
  "editor.stickyScroll.enabled": true, // 很有用
  "editor.hover.sticky": true,
  "editor.linkedEditing": true,
  "editor.smoothScrolling": true,
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  // 自动显示建议
  "editor.quickSuggestions": {
    "other": true,
    "comments": true,
    "strings": true
  },
  "workbench.editor.closeOnFileDelete": true,
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.editor.limit.enabled": true,
  "workbench.editor.limit.perEditorGroup": true,
  "workbench.editor.limit.value": 10,
  // #endregion

  // #region 终端
  "terminal.integrated.fontWeight": "normal",
  "terminal.integrated.cursorStyle": "underline",
  "terminal.integrated.persistentSessionReviveProcess": "never",
  "terminal.integrated.tabs.enabled": true,
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.env.osx": {},
  "terminal.integrated.env.windows": {},
  "terminal.integrated.automationProfile.osx": {
    "path": "/Applications/Warp.app"
  },
  "terminal.external.osxExec": "Warp.app",
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.cursorStyleInactive": "block",
  "terminal.integrated.mouseWheelZoom": true,
  "terminal.integrated.fontSize": 15,
  // #endregion
  
  // #region 插件
  "extensions.autoUpdate": true,
  "extensions.ignoreRecommendations": false,
  "[javascript]": {
    "editor.defaultFormatter": "rvest.vs-code-prettier-eslint"
  },
  "[html]": {
    "editor.defaultFormatter": "rvest.vs-code-prettier-eslint"
  },
  "files.associations": {
    "*.cjson": "jsonc",
    "*.wxss": "css",
    "*.wxs": "javascript"
  },
  "emmet.includeLanguages": {
    "wxml": "html"
  },
  "[vue]": {
    "editor.defaultFormatter": "rvest.vs-code-prettier-eslint"
  },
  "[less]": {
    "editor.defaultFormatter": "michelemelluso.code-beautifier"
  },
  "[typescript]": {
    "editor.defaultFormatter": "rvest.vs-code-prettier-eslint"
  },
  "[scss]": {
    "editor.defaultFormatter": "michelemelluso.code-beautifier"
  },
  "files.autoSave": "afterDelay",
  "vsicons.dontShowNewVersionMessage": true,
  "errorLens.excludeBySource": ["ts(7016)", "ts(1149)", "ts(2345)", "ts(2304)"],
  "[json]": {
    "editor.defaultFormatter": "rvest.vs-code-prettier-eslint"
  },
  "[css]": {
    "editor.defaultFormatter": "vscode.css-language-features"
  },
  "git.confirmSync": false,
  "git.terminalGitEditor": true,

  "jsdoc.EnabledDate": true,
  "jsdoc.Author": "HuberyYang",

  // #region 文件归类折叠
  // https://github.com/antfu/vscode-file-nesting-config
  // "explorer.fileNesting.enabled": true,
  // "explorer.fileNesting.expand": false,
  // "explorer.fileNesting.patterns": {
  //   "*.asax": "$(capture).*.cs, $(capture).*.vb",
  //   "*.ascx": "$(capture).*.cs, $(capture).*.vb",
  //   "*.ashx": "$(capture).*.cs, $(capture).*.vb",
  //   "*.aspx": "$(capture).*.cs, $(capture).*.vb",
  //   "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
  //   "*.c": "$(capture).h",
  //   "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx",
  //   "*.cjs": "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs",
  //   "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
  //   "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx",
  //   "*.cs": "$(capture).*.cs",
  //   "*.cshtml": "$(capture).cshtml.cs",
  //   "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
  //   "*.css": "$(capture).css.map, $(capture).*.css",
  //   "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx",
  //   "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
  //   "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
  //   "*.go": "$(capture)_test.go",
  //   "*.java": "$(capture).class",
  //   "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
  //   "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx",
  //   "*.master": "$(capture).*.cs, $(capture).*.vb",
  //   "*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",
  //   "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
  //   "*.pubxml": "$(capture).pubxml.user",
  //   "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
  //   "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
  //   "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
  //   "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx",
  //   "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
  //   "*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
  //   "*.xaml": "$(capture).xaml.cs",
  //   "+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js,+layout.gql",
  //   "+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js,+page.gql",
  //   ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
  //   ".env": "*.env, .env.*, .envrc, env.d.ts",
  //   ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
  //   ".project": ".classpath",
  //   "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
  //   "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json",
  //   "I*.cs": "$(capture).cs",
  //   "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
  //   "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
  //   "cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
  //   "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
  //   "default.nix": "shell.nix",
  //   "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, deno.lock, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
  //   "dockerfile": ".dockerignore, docker-compose.*, dockerfile*",
  //   "flake.nix": "flake.lock",
  //   "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
  //   "gemfile": ".ruby-version, gemfile.lock",
  //   "go.mod": ".air*, go.sum",
  //   "go.work": "go.work.sum",
  //   "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
  //   "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
  //   "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
  //   "package.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, simple-git-hooks*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
  //   "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",
  //   "pyproject.toml": ".pdm.toml, pdm.lock, pyproject.toml",
  //   "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
  //   "readme*": "authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*",
  //   "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
  //   "rush.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, simple-git-hooks*, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
  //   "shims.d.ts": "*.d.ts",
  //   "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, houdini.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vite.config.*, vitest.config.*, webpack.config.*, windi.config.*",
  //   "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
  //   "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*"
  // },
  // #endregion
  
  "color-highlight.matchWords": true,
  "color-highlight.matchRgbWithNoFunction": true,
  "[svg]": {
    "editor.defaultFormatter": "jock.svg"
  },
  "git.enableSmartCommit": true,
  "prettier.vueIndentScriptAndStyle": true,
  "aws.suppressPrompts": {
    "codeWhispererConnectionExpired": true,
    "codeWhispererNewWelcomeMessage": true
  },
  "backgroundCover.opacity": 0.3,
  "auto-close-tag.SublimeText3Mode": true,
  "liveServer.settings.donotShowInfoMsg": true,
  "highlight-matching-tag.styles": {
    "opening": {
      "full": {
        "custom": {
          "borderWidth": "0 0 1px 0",
          "borderStyle": "solid",
          "borderColor": "yellow",
          "borderRadius": "0",
          "overviewRulerColor": "white"
        }
      }
    }
  },
  "powermode.enabled": true,
  "powermode.presets": "flames",
  "powermode.combo.counterEnabled": "hide",
  "powermode.combo.location": "off",
  "powermode.combo.timeout": 5,
  "git.openRepositoryInParentFolders": "never",
  "unocss.root": "packages/client",
  "unocss.languageIds": ["vue", "javascript"],
  "unocss.remToPxPreview": true,
  "javascript.updateImportsOnFileMove.enabled": "never",
  "leetcode.endpoint": "leetcode-cn",
  "leetcode.workspaceFolder": "/Volumes/WD_BLACK SN850X/wode/lianxi/leetcode",
  "leetcode.defaultLanguage": "javascript",
  "leetcode.hint.configWebviewMarkdown": false,
  "leetcode.hint.commentDescription": false,
  "synthwave84.disableGlow": true,
  "synthwave84.brightness": 1,
  // #region Vim
  "vim.easymotion": true,
  "vim.sneak": true,
  "vim.incsearch": true,
  "vim.useSystemClipboard": true,
  "vim.sneakUseIgnorecaseAndSmartcase": true,
  "vim.useCtrlKeys": true,
  "vim.hlsearch": true,
  "vim.insertModeKeyBindings": [
    // 跳转上一个编辑器
    {
      "before": ["<C-j>"],
      "commands": ["workbench.action.previousEditor"]
    },
    // 跳转下一个编辑器
    {
      "before": ["<C-k>"],
      "commands": ["workbench.action.nextEditor"]
    },
    {
      "before": ["j", "j"],
      "after": ["<Esc>"]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    // {
    //   "before": ["<leader>", "d"],
    //   "after": ["d", "d"]
    // },
    // 跳转到行首
    {
      "before": ["H"],
      "after": ["^"]
    },
    {
      "before": ["L"],
      "after": ["g", "_"]
    },
    // 跳转上一个编辑器
    {
      "before": ["<C-j>"],
      "commands": ["workbench.action.previousEditor"]
    },
    // 跳转下一个编辑器
    {
      "before": ["<C-k>"],
      "commands": ["workbench.action.nextEditor"]
    },
    // {
    //   "before": ["<C-n>"],
    //   "commands": [":nohl"]
    // },
    {
      "before": ["K"],
      "commands": ["lineBreakInsert"],
      "silent": true
    },
    // 在编辑器区域直接新建文件（当前文件所在文件夹下）
    {
      "before": ["<Leader>", "n", "f"],
      "commands": ["explorer.newFile"]
    },
    // 在编辑器区域直接新建文件夹（当前文件所在文件夹下）
    {
      "before": ["<Leader>", "n", "d"],
      "commands": ["explorer.newFolder"]
    }
  ],
  "vim.operatorPendingModeKeyBindings": [
    // 跳转上一个编辑器
    {
      "before": ["<C-j>"],
      "commands": ["workbench.action.previousEditor"]
    },
    // 跳转下一个编辑器
    {
      "before": ["<C-k>"],
      "commands": ["workbench.action.nextEditor"]
    },
    {
      "before": ["H"],
      "after": ["^"]
    },
    {
      "before": ["L"],
      "after": ["g", "_"]
    }
  ],
  "vim.leader": "<space>",
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-f>": false,
    "<cmd-c>": false
  },
  // #endregion
  
  "leetcode.hint.commandShortcut": false,
  "[markdown]": {
    "editor.defaultFormatter": "vscode.markdown-language-features"
  },
   // #region eslint
   // Enable the ESlint flat config support
  "eslint.useFlatConfig": true,
   "editor.formatOnSave": true,

   // Auto fix
   "editor.codeActionsOnSave": {
     "source.fixAll.eslint": "explicit",
     "source.organizeImports": "never"
   },
 
   // Silent the stylistic rules in you IDE, but still auto fix them
   "eslint.rules.customizations": [
     { "rule": "style/*", "severity": "off" },
     { "rule": "format/*", "severity": "off" },
     { "rule": "*-indent", "severity": "off" },
     { "rule": "*-spacing", "severity": "off" },
     { "rule": "*-spaces", "severity": "off" },
     { "rule": "*-order", "severity": "off" },
     { "rule": "*-dangle", "severity": "off" },
     { "rule": "*-newline", "severity": "off" },
     { "rule": "*quotes", "severity": "off" },
     { "rule": "*semi", "severity": "off" }
   ],
 
   // Enable eslint for all supported languages
   "eslint.validate": [
     "javascript",
     "javascriptreact",
     "typescript",
     "typescriptreact",
     "vue",
     "html",
     "markdown",
     "json",
     "jsonc",
     "yaml",
     "toml"
   ],
   // #endregion
  
   // #region 自定义js、css文件
   "vscode_custom_css.imports": [
     "file:///Applications/Visual Studio Code.app/CustomCss/index.css",
  ],
  // #endregion
  
  "nuxtr.defaultPackageManager": "pnpm",
  "nuxtr.vueFiles.style.alwaysScoped": true,
  "nuxtr.projectTemplates": [
    {
      "name": "Vitesse",
      "description": " Vitesse for Nuxt 3 🏔💚⚡️ ",
      "repoURL": "https://github.com/antfu/vitesse-nuxt3",
      "branch": "main", // Optional
    }
  ],
  "nuxtr.intellisense.nuxtrc": true,
  "nuxtr.intellisense.vueFiles": true,
  "nuxtr.intellisense.nuxtignore": true,
  "[jsonc]": {
    "editor.defaultFormatter": "rvest.vs-code-prettier-eslint"
  },
  "explorer.confirmPasteNative": false,
  "settingsSync.ignoredSettings": [
    "editor.fontFamily"
  ],
  "[nginx]": {
    "editor.defaultFormatter": "raynigon.nginx-formatter"
  },
  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter"
  },
  "code-runner.executorMap": {
    "python": "python"
  },
  "vs-code-prettier-eslint.prettierLast": true,
  "powermode.shake.enabled": false,
  "editor.minimap.size": "fit",
  "workbench.activityBar.location": "top",
  "console-ninja.featureSet": "Community",
  "editor.minimap.renderCharacters": false,
  "editor.showFoldingControls": "never",
  "search.showLineNumbers": true,
  "regionHighlighter.defaultColor": "rgba(74,222,128,.1)",
  "regionHighlighter.extraColorStrategy": "Default Color",
  "regionHighlighter.defaultTheme": "Custom Theme",
  "regionHighlighter.customTheme": [
    "rgba(74 222 128 / .1)",
    "rgb(251 113 133 / .1)",
    "rgb(56 189 248 / .1)",
    "rgb(251 146 60 / .1)",
    "rgb(148 163 184 / .1)",
    "rgb(52 211 153 / .1)",
    "rgb(163 230 53 / .1)",
    "rgb(248 113 113 / .1)"
  ],
  "breadcrumbs.enabled": false,
  "window.customTitleBarVisibility": "never",
  "workbench.statusBar.visible": false,
}